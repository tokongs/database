CREATE TABLE Company (
	CompanyID	INTEGER	NOT NULL,
	URL	VARCHAR(45),
	Country	VARCHAR(45),
	Address	VARCHAR(45),
	PRIMARY KEY (CompanyID)
);

CREATE TABLE Media (
	MediaID INTEGER NOT NULL,
	Title VARCHAR(45),
	Length INTEGER,
	PublicationYear	INTEGER,
	LaunchDate	DATETIME,
	Description	VARCHAR(512),
	CompanyID	INTEGER	NOT NULL,
	PRIMARY KEY (MediaID),
	FOREIGN KEY (CompanyID) REFERENCES Company(CompanyID)
);

CREATE TABLE Genre (
	GenreID	INTEGER	NOT NULL,
	Name VARCHAR(45),
	PRIMARY KEY (GenreID)
);

CREATE TABLE MediaIsGenre (
	MediaID	INTEGER	NOT NULL,
	GenreID	INTEGER	NOT NULL,
	PRIMARY KEY (MediaID, GenreID),
	FOREIGN KEY (MediaID) REFERENCES Media(MediaID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (GenreID) REFERENCES Genre(GenreID)
						ON UPDATE CASCADE
						ON DELETE CASCADE
);



CREATE TABLE Employee (
	EmployeeID INTEGER NOT NULL,
	Name VARCHAR(45),
	BirthYear INTEGER,
	OriginCountry	VARCHAR(45),
	PRIMARY KEY (EmployeeID)
);

CREATE TABLE EmployeeActs (
	EmployeeID INTEGER NOT NULL,
	MediaID INTEGER	NOT NULL,
	Role VARCHAR(45),
	PRIMARY KEY (EmployeeID, MediaID),
	FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (MediaID) REFERENCES Media(MediaID)
						ON UPDATE CASCADE
						ON DELETE CASCADE
);

CREATE TABLE EmployeeWrote (
	EmployeeID INTEGER NOT NULL,
	MediaID	INTEGER	NOT NULL,
  PRIMARY KEY (EmployeeID, MediaID),
	FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (MediaID) REFERENCES Media(MediaID)
						ON UPDATE CASCADE
						ON DELETE CASCADE
);

CREATE TABLE EmployeeDirected (
	EmployeeID INTEGER NOT NULL,
	MediaID	INTEGER	NOT NULL,
	PRIMARY KEY (EmployeeID, MediaID),
	FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (MediaID) REFERENCES Media(MediaID)
						ON UPDATE CASCADE
						ON DELETE CASCADE
);

CREATE TABLE Music (
	MusicID	INTEGER	NOT NULL,
	Title	VARCHAR(45),
	PRIMARY KEY (MusicID)
);

CREATE TABLE EmployeeComposed (
	EmployeeID INTEGER NOT NULL,
	MusicID	INTEGER	NOT NULL,
	PRIMARY KEY (EmployeeID, MusicID),
	FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (MusicID) REFERENCES Music(MusicID)
						ON UPDATE CASCADE
						ON DELETE CASCADE
);

CREATE TABLE EmployeePerformed (
	EmployeeID INTEGER NOT NULL,
	MusicID	INTEGER	NOT NULL,
  PRIMARY KEY (EmployeeID, MusicID),
  FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (MusicID) REFERENCES Music(MusicID)
						ON UPDATE CASCADE
						ON DELETE CASCADE
);

CREATE TABLE MusicInMedia (
	MusicID	INTEGER	NOT NULL,
	MediaID	INTEGER	NOT NULL,
  PRIMARY KEY (MusicID, MediaID),
  FOREIGN KEY  (MusicID) REFERENCES Music(MusicID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (MediaID) REFERENCES Media(MediaID)
						ON UPDATE CASCADE
						ON DELETE CASCADE
);

CREATE TABLE Series(
	SeriesID INTEGER NOT NULL,
	Name VarChar(45),
	PRIMARY KEY (SeriesID)
);

CREATE TABLE Season(
	Number INTEGER DEFAULT 1,
	SeriesID INTEGER NOT NULL,
	PRIMARY KEY (Number, SeriesID),
	FOREIGN KEY (SeriesID) REFERENCES Series(SeriesID)
						ON UPDATE CASCADE
						ON DELETE CASCADE
);

CREATE TABLE User(
	UserID INTEGER 	NOT NULL,
	Username VARCHAR(45)	NOT NULL,
	PRIMARY KEY (UserID)
);

CREATE TABLE Review(
	ReviewID INTEGER NOT NULL,
	Text VARCHAR(512) NOT NULL,
	Rating INTEGER	NOT NULL,
	UserID INTEGER	NOT NULL,
	MediaID INTEGER	NOT NULL,
	Number INTEGER	NOT NULL,
	SeriesID INTEGER NOT NULL,
	PRIMARY KEY (ReviewID),
	FOREIGN KEY (UserID) REFERENCES User(UserID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (MediaID) REFERENCES Media(MediaID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (Number, SeriesID) REFERENCES Season(Number, SeriesID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	FOREIGN KEY (SeriesID) REFERENCES Series(SeriesID)
						ON UPDATE CASCADE
						ON DELETE CASCADE,
	CONSTRAINT Rating_Decimal CHECK (Rating >= 1 AND Rating <=10)
);